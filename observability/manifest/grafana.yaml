apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana-config
  namespace: monitor
stringData:
  grafana.ini: |
    [date_formats]
    default_timezone = UTC
    [security]
    admin_user = isadmin
    admin_password = isadmin
type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: monitor
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: monitor
spec:
  replicas: 1
  serviceName: grafana
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      containers:
        - env: []
          image: grafana/grafana:10.4.5
          name: grafana
          ports:
            - containerPort: 3000
              name: http
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-storage
              readOnly: false
            - mountPath: /etc/grafana
              name: grafana-config
              readOnly: false
      securityContext:
        fsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      tolerations:
        - key: ack-pool-name
          operator: Exists
          effect: NoSchedule
      volumes:
        - name: grafana-config
          secret:
            secretName: grafana-config
  volumeClaimTemplates:
    - metadata:
        name: grafana-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: "default"
        resources:
          requests:
            storage: 20Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana
  namespace: monitor
spec:
  ingressClassName: nginx
  rules:
    - host: ${HOST}
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: grafana
                port:
                  number: 3000
  tls:
    - hosts:
        - ${HOST}
      secretName: grafana-com-tls
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: grafana
  name: grafana
  namespace: monitor
spec:
  ports:
    - name: http
      port: 3000
      targetPort: http
  selector:
    app.kubernetes.io/name: grafana
  type: ClusterIP
