# 默认只能本机连，注释掉则可进行外网访问
bind 127.0.0.1
# 关闭保护模式，允许外网访问
protected-mode yes->no
# 设置密码
requirepass 12345678
# 此参数确定了TCP连接中已完成队列(完成三次握手之后)的长度， 当然此值必须不大于Linux
# 系统定义的/proc/sys/net/core/somaxconn值，默认是511。而Linux的默认参数值是128，当系统并
# 发量大并且客户端速度缓慢的时候，建议修改值大于511。
tcp-backlog 511	
# 链接空闲了多少秒之后会被链接，也就是超时时间，0的话就表示永不超时
timeout 0
# 每隔多少秒向客户端发送ACKs来检测客户端是否还存活着
tcp-keepalive 300
# 是否以守护进程运行(由于我们是docker启动 -d 参数已经默认是后台运行了，故不需作配置)
daemonize no
# 日志记录等级 debug（开发），verbose（默认值），notice（生产），warning（警告）
loglevel verbose
# 指定数据库数量，默认是16
databases 16
# 客户端最大连接数配置默认是10000
maxclients 10000
# 内存限制
maxmemory 1gb
# 内存策略，默认是 noeviction
maxmemory-policy volatile-lru
#IO线程组中IO线程的数量
io-threads 4
# 是否开启IO线程组，默认是不开启，想开启，可以设置为true，并指定上面io-threads的数值
io-threads-do-reads no
# 是否启用aof持久化方式，默认配置是no
# 采用异步方式把数据写入到磁盘，如果不开启，可能会在断电时导致部分数据丢失
appendonly yes
# aof文件刷新的频率。
# 1.no 依靠OS进行刷新，redis不主动刷新AOF，这样最快，但安全性就差。
# 2.always 每提交一个修改命令都调用fsync刷新到AOF文件，非常非常慢，但也非常安全。
# 3.everysec 每秒钟都调用fsync刷新到AOF文件，很快，但可能会丢失一秒以内的数据。
appendfsync everysec
# 决定要对执行时间大于多少微秒(microsecond，1秒 = 1,000,000 微秒)的查询进行记录。
slowlog-log-slower-than 10000
# 决定 slow log 最多能保存多少条日志
slowlog-max-len 128